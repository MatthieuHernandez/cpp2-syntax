<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
    <key>name</key>
    <string>cpp2</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#function-definition</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#type-name</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>punctuation-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.comma.cpp2</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>punctuation-colon</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.colon.cpp2</string>
        <key>match</key>
        <string>:(?:[\s]|$)</string>
      </dict>
      <key>definition</key>
      <dict>
        <key>name</key>
        <string>meta.definition.cpp2</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-definition</string>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>name</key>
        <string>meta.expression.cpp2</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#unary-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#binary-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-definition-typed</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-name</string>
          </dict>
        </array>
      </dict>
      <key>return-statement</key>
      <dict>
        <key>name</key>
        <string>meta.return-statement.cpp2</string>
        <key>begin</key>
        <string>\b(return)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.return.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>statement</key>
      <dict>
        <key>name</key>
        <string>meta.statement.cpp2</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#return-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>namespace-access</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?:([_[:alpha:]][_[:alnum:]]*)(::))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.namespace.cpp2</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.static-accessor.cpp2</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[_[:alpha:]][_[:alnum:]]*[^\w:])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>variable-name</key>
      <dict>
        <key>name</key>
        <string>meta.definition.variable.cpp2</string>
        <key>match</key>
        <string>((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.cpp2</string>
          </dict>
        </dict>
      </dict>
      <key>variable-definition-typed</key>
      <dict>
        <key>name</key>
        <string>meta.definition.variable.cpp2</string>
        <key>begin</key>
        <string>(?x)
((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)\s*
(:(?:[\s]|$))\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.cpp2</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#typing</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assignment</string>
          </dict>
        </array>
      </dict>
      <key>assignment</key>
      <dict>
        <key>name</key>
        <string>meta.assignment.cpp2</string>
        <key>begin</key>
        <string>(?x)
(=)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.cpp2</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>function-definition</key>
      <dict>
        <key>name</key>
        <string>meta.definition.function.cpp2</string>
        <key>begin</key>
        <string>(?x)
([_[:alpha:]][_[:alnum:]]*)\s*
(:(?:[\s]|$))\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.cpp2</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[\}\;])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-typing</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#in-brackets-function-assignment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#single-expression-function-assignment</string>
          </dict>
        </array>
      </dict>
      <key>single-expression-function-assignment</key>
      <dict>
        <key>name</key>
        <string>meta.function.body.cpp2</string>
        <key>begin</key>
        <string>(?x)
(=)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.cpp2</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-content</string>
          </dict>
        </array>
      </dict>
      <key>in-brackets-function-assignment</key>
      <dict>
        <key>name</key>
        <string>meta.function.body.cpp2</string>
        <key>begin</key>
        <string>(?x)
(=)\s*
(\{)
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.cpp2</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\})(;)?</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.cpp2</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.cpp2</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-content</string>
          </dict>
        </array>
      </dict>
      <key>function-content</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#statement</string>
          </dict>
        </array>
      </dict>
      <key>binary-operator</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.binary.cpp2</string>
        <key>match</key>
        <string>(?x)
(
  = | := |
  \+ | - | \* | / | % | 
  \+= | -= | \*= | /= | %= |
  &lt;&lt; | &gt;&gt; | &amp; | \| | ~ | \^ | 
  &lt;&lt;= | &gt;&gt;= | &amp;= | \|= | \^= |
  &amp;&amp; | \|\| |
  &amp;&amp;= | \|\|= |
  == | != | &lt; | &gt; | &lt;= | &gt;= | &lt;=&gt; 
)
</string>
      </dict>
      <key>unary-operator</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.unary.cpp2</string>
        <key>match</key>
        <string>(?x)
(?&lt;=((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*))
(
  \+\+ | -- |
  &amp;    | \$ |
  \.
)
</string>
      </dict>
      <key>typing</key>
      <dict>
        <key>name</key>
        <string>meta.typing.cpp2</string>
        <key>begin</key>
        <string>(?&lt;=:(?:[\s]|$))\s*</string>
        <key>end</key>
        <string>(?=\s*(?=[=;]))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type</string>
          </dict>
        </array>
      </dict>
      <key>function-typing</key>
      <dict>
        <key>name</key>
        <string>meta.typing.cpp2</string>
        <key>begin</key>
        <string>(?&lt;=:(?:[\s]|$))\s*</string>
        <key>end</key>
        <string>(?=\s*(?=[=;]))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-type</string>
          </dict>
        </array>
      </dict>
      <key>type</key>
      <dict>
        <key>name</key>
        <string>meta.type.cpp2</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-name</string>
          </dict>
        </array>
      </dict>
      <key>type-name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>([_[:alpha:]][_[:alnum:]]*)\s*(::)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.namespace.cpp2</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.static-accessor.cpp2</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(::)\s*([_[:alpha:]][_[:alnum:]]*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.static-accessor.cpp2</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.cpp2</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.type.cpp2</string>
            <key>match</key>
            <string>[_[:alpha:]][_[:alnum:]]*</string>
          </dict>
        </array>
      </dict>
      <key>function-return-type-seperator</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.function-return-type.cpp2</string>
        <key>match</key>
        <string>-&gt;</string>
      </dict>
      <key>function-type</key>
      <dict>
        <key>name</key>
        <string>meta.function-type.cpp2</string>
        <key>begin</key>
        <string>(?x)
(?=\()
</string>
        <key>end</key>
        <string>(?=[=;])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#parenthesized-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-return-type-seperator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type</string>
          </dict>
        </array>
      </dict>
      <key>parameter-modifier</key>
      <dict>
        <key>name</key>
        <string>storage.modifier.cpp2</string>
        <key>match</key>
        <string>\b(in|out|inout|copy|move|forward)\b</string>
      </dict>
      <key>parameter-name</key>
      <dict>
        <key>match</key>
        <string>(?x)
([_[:alpha:]][_[:alnum:]]*)
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.parameter.cpp2</string>
          </dict>
        </dict>
      </dict>
      <key>parameter</key>
      <dict>
        <key>name</key>
        <string>meta.parameter.cpp2</string>
        <key>begin</key>
        <string>(?x)
(?:(\w+)?\s+)?
([_[:alpha:]][_[:alnum:]]*)\s*
(:)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter-modifier</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter-name</string>
              </dict>
            </array>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\)\,])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-name</string>
          </dict>
        </array>
      </dict>
      <key>parenthesized-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.function.parameters.cpp2</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.end.cpp2</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parameter</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.cpp2</string>
            <key>begin</key>
            <string>/\*</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.cpp2</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.cpp2</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^\s+)?(?=//)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.cpp2</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>comment.block.documentation.cpp2</string>
                <key>begin</key>
                <string>(?&lt;!/)///(?!/)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.cpp2</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
              </dict>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.cpp2</string>
                <key>begin</key>
                <string>(?&lt;!/)//(?:(?!/)|(?=//))</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.cpp2</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>function-call</key>
      <dict>
        <key>name</key>
        <string>meta.function-call.cpp2</string>
        <key>begin</key>
        <string>(?x)
((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)\s*
(?=\()
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-arguments</string>
          </dict>
        </array>
      </dict>
      <key>function-name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)
  \b ([_[:alpha:]][_[:alnum:]]*) \b
</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.cpp2</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>function-arguments</key>
      <dict>
        <key>name</key>
        <string>meta.function.arguments.cpp2</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.arguments.begin.cpp2</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.arguments.end.cpp2</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>string</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.cpp2</string>
        <key>begin</key>
        <string>"</string>
        <key>end</key>
        <string>"</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.cpp2</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>scopeName</key>
    <string>source.cpp2</string>
  </dict>
</plist>